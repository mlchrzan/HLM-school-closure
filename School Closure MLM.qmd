---
title: "School Closure MLM"
author: "mlc"
format: html
editor: visual
---

# Setup

```{r libraries, message=FALSE}
library(tidyverse)
library(lme4)
library(lmerTest)
library(performance)
library(lattice)
library(here)
library(janitor) #for clean_names()
library(DescTools) #for Winsorize()
library(GGally) #for correlation matrix
library(corrplot) #for correlation matrix
library(plotly)
library(naniar)
library(caret) #for up and down sampling
library(beepr) #for noises to alert when code is done running!
```

```{r load-data, message=FALSE}
closure <- read_csv("school_district_theil_index.csv")
district_states <- read_csv("district_state_info.csv", skip = 6)
district_states <- clean_names(district_states)

district_states <- district_states |> 
  rename(agency_id = starts_with("agency_id"), 
         dist_state_name = starts_with('state_name'),
         dist_state_abbr = starts_with('state_abbr')) |> 
  mutate(agency_id = as.numeric(agency_id), 
         dist_state_abbr = as.factor(dist_state_abbr), 
         dist_state_name = as.factor(dist_state_name))

closure <- left_join(closure, 
                     district_states, 
                     by = join_by(agency_id))
rm(district_states)

closure <- closure |> 
  dplyr::select(agency_id, 
                school_id, 
                year, 
                school_name, 
                dist_state_name, 
                dist_state_abbr, 
                everything())
```

```{r initial-set-up}
closure <- closure |> 
  mutate(school_level = if_else(school_level == 5 | school_level ==6, 4, school_level)) 

#Recreate location type from dummy variables, including NA's where appropriate
location_known <- closure |> 
  pivot_longer(cols = c(urban, suburban, rural), 
               names_to = "location_type") |> 
  mutate(location_type = if_else(value == 0, NA, location_type)) |>
  filter(value == 1) |>
  dplyr::select(-value)
  
rows_without_location <- closure |> 
  pivot_longer(cols = c(urban, suburban, rural), 
               names_to = "location_type") |> 
  mutate(location_type = if_else(value == 0, NA, location_type)) |>
  distinct() |> 
  filter(value == 0) |>
  dplyr::select(-value) 

location_unknown <- anti_join(rows_without_location, location_known, 
                              by = join_by(school_id, year))

closure <- bind_rows(location_known, location_unknown) 
rm(location_known, location_unknown, rows_without_location)


#Remove persisting rows for schools after they close
closure <- closure |> 
  #Find year school closed
  group_by(school_id, year) |> 
  filter(closed == 1) |> 
  summarize(year_closed = year, 
            .groups = 'keep') |> 
  ungroup() |> 
  dplyr::select(-year) |> 
  #Filter to only include years less than or equal to that year for each school
  right_join(closure) |> 
  mutate(year_closed = if_else(is.na(year_closed), Year(Today()), year_closed)) |> 
  filter(year <= year_closed) |> 
  dplyr::select(year_closed, agency_id, school_id, school_name, year, closed, everything()) |> 
  dplyr::select(-year_closed, -agency_name)


#Create factors
closure <- closure |> 
  mutate(school_id = factor(school_id, levels = unique(school_id)), 
         agency_id = factor(agency_id, levels = unique(agency_id)), 
         #year = factor(year, levels = unique(year)),
         #closed = factor(closed, levels = unique(closed)),
         school_level = factor(school_level, levels = unique(school_level)), 
         charter = factor(charter, levels = unique(charter)), 
         magnet = factor(magnet, levels = unique(magnet)), 
         title1 = factor(title1, levels = unique(title1)), 
         location_type = factor(location_type, levels = unique(location_type)))
```

```{r cleaning-variables}
#Correct Location Types

#Create Mode function to find the most common value that is not NA
Mode <- function(x, na.rm = FALSE) {
  if(na.rm){
    x = x[!is.na(x)]
  }

  ux <- unique(x)
  return(ux[which.max(tabulate(match(x, ux)))])
}

closure <- closure |> 
  group_by(school_id) |> 
  mutate(most_common_location = Mode(location_type, na.rm = TRUE)) |> 
  mutate(location_type = most_common_location) |> 
  ungroup() |> 
  dplyr::select(-most_common_location)

  

#Correct Percentages/Ratios
  #maxval's chosen based on distributions
closure$st_ratio <- Winsorize(closure$st_ratio, 
                              minval = 1,
                              maxval = 51, 
                              na.rm = TRUE)

closure$dist_st_ratio <- Winsorize(closure$dist_st_ratio, 
                                   minval = 1,
                                   maxval = 33,
                                   na.rm = TRUE)

  #all percentages higher than 100 capped to 100
closure <- closure |>  
  mutate(across((starts_with("dist_pct")), ~if_else(. > 1, 1, .)), 
         pct_frpl = if_else(pct_frpl > 1, 1, pct_frpl))


#Fix districts indicating no students enrollled
closure <- closure |> 
  group_by(agency_id, year) |> 
  mutate(dist_tot_students = if_else(dist_tot_students == 0, 
                                     sum(tot_students), 
                                     dist_tot_students), 
         dist_tot_students = if_else(dist_tot_students == 0, 
                                    NA, 
                                    dist_tot_students), 
         tot_students = if_else(tot_students == 0, 
                                    NA, 
                                    tot_students)) |> 
  ungroup() 



#Title1 Categories (Can I get a clean yes/no)
```

```{r creating-variables}
#Enrollment Trends
closure <- closure |> 
  group_by(school_id) |> 
  mutate(three_yr_enroll_schl = tot_students - dplyr::lag(tot_students, n = 3), 
         three_yr_enroll_dist = dist_tot_students - dplyr::lag(dist_tot_students, n = 3)) |>
  ungroup()


#What percent of of District Enrollment is at a given school? 
closure <- closure |> 
  mutate(pct_dist_enroll = tot_students/dist_tot_students)

#Is the school more diverse than the district? 
closure <- closure |> 
  mutate(school_more_diverse = if_else(sch_theil < dist_theil, "Yes", "No"))

#Calculate the number of schools a district has within a given year
# closure <- closure |> 
#   group_by(agency_id, year) |> 
#   mutate(dist_num_schools = n_distinct(school_id)) |> 
#   ungroup()
```

```{r cleaning-dist-pct-enroll}
#Fixing dist_tot_student totals for schools and years where the pct was over 100 (dist count wasn't 0, but was still too low, single digit counts)

closure <- closure |> 
  group_by(agency_id, year) |> 
  mutate(dist_tot_students = if_else(pct_dist_enroll > 100, 
                                     sum(tot_students), 
                                     dist_tot_students), 
         pct_dist_enroll = if_else(pct_dist_enroll > 100, 
                                   tot_students/dist_tot_students, 
                                   pct_dist_enroll)) |> 
  ungroup()  

summary(closure$pct_dist_enroll)
```

```{r aggregate-to-district-level}
closure_dist <- closure |> 
  mutate(closed = as.numeric(closed)) |>
  rename_with(~ gsub("^tot_", "avg_schl_tot_", .x), starts_with("tot_")) |> 
  rename_with(~ gsub("^pct_", "avg_schl_pct_", .x), starts_with("pct_")) 

closure_dist <- closure_dist |> 
  group_by(agency_id, year) |> 
  summarize(num_closed = sum(closed),
            num_schools = n_distinct(school_id),
            avg_schl_theil = mean(sch_theil),
            num_schl_more_diverse = sum(school_more_diverse == 'Yes'),
            num_level_elem = sum(school_level == 1), 
            num_level_midd = sum(school_level == 2), 
            num_level_high = sum(school_level == 3), 
            num_level_other = sum(school_level == 4), 
            num_charter = sum(charter == '1-Yes'), 
            num_magnet = sum(magnet == '1-Yes'), 
            num_title_1 = sum(title1 == '1-Yes'), 
            avg_schl_st_ratio = mean(st_ratio), 
            location_type = Mode(location_type),
            across(starts_with('avg_schl_tot_'), mean), 
            across(starts_with('avg_schl_pct_'), mean), 
            avg_schl_3_yr_enroll_change = mean(three_yr_enroll_schl), 
            across(starts_with('dist_'), ~ first(.)), 
            .groups = 'keep') |>
  ungroup() 
```

```{r clean-up-closure-dist}
#Add District Enrollment Trends
closure_dist <- closure_dist |> 
  group_by(agency_id) |> 
  mutate(three_yr_enroll_dist = dist_tot_students - dplyr::lag(dist_tot_students, n = 3)) |>
  ungroup()

#Arranging Data for Readability
closure_dist <- closure_dist |> 
  select(agency_id, year, 
         dist_state_name, dist_state_abbr, location_type, 
         num_closed, num_schools, everything()) |> 
  rename_with(~str_remove(.x, "^dist_"), starts_with("dist_")) 

closure_dist
```

```{r filter-CA}
closure_dist_CA <- closure_dist |> 
  filter(state_abbr == "CA") 

closure_dist_CA
```

```{r alert-data-is-ready}
beep(sound = 8)
```

# Check Data

```{r check-level}
closure_dist_CA |>
  group_by(agency_id) |>
  summarize(across(where(is.numeric), ~ sd(., na.rm = TRUE)))

#All numerical variables are time-varying
```

```{r data-characteristics}
#Number of Districts
n_distinct(closure_dist_CA$agency_id)

#Number of Schools Over Time
closure_dist_CA |> 
  group_by(year) |> 
  summarize(num_schools = sum(num_schools)) |> 
  ungroup()

#Number of Districts Over Time
closure_dist_CA |> 
  group_by(year) |> 
  summarize(num_dists = n_distinct(agency_id)) |> 
  ungroup()

#Average Number of Schools Closed
summary(closure_dist_CA$num_closed)

#Number of Closures Over Time
closure_dist_CA |> 
  group_by(year) |> 
  summarize(num_closed = sum(num_closed)) |> 
  ungroup()
```

```{r select-vars-and-remove-NAs}
closure_dist_CA <- closure_dist_CA |> 
  select(agency_id, year, num_closed,
         location_type,
         avg_schl_pct_dist_enroll, 
         avg_schl_st_ratio, 
         num_schl_more_diverse, 
         st_ratio, 
         per_pupil_expend, 
         num_schools) |>  
  na.omit()


#DISTRICT LEVEL
#location_type

#TIME LEVEL
#schl_pct_dist_enroll
#schl_st_ratio
#num_school_more_diverse ???, could also try specific racial identity parameters
#dist_st_ratio
#dist_per_pupil_expend
#dist_num_schools
```

# 5 Hypothesis

## Examine Linearity and Outliers

```{r check-linearity-year}
closure_dist_CA |> 
  group_by(year) |> 
  summarize(num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = year,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-pct-dist-enroll}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_pct_dist_enroll = mean(avg_schl_pct_dist_enroll, 
                                       na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_pct_dist_enroll,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = avg_schl_pct_dist_enroll,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-dist-st-ratio}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_st_ratio = mean(st_ratio, na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_st_ratio,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = st_ratio,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-schl-st-ratio}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_schl_st = mean(avg_schl_st_ratio, na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_schl_st,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = avg_schl_st_ratio,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-per-pupil}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_per_pupil = mean(per_pupil_expend, na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_per_pupil,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = per_pupil_expend,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-num-schools}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_num_schools = mean(num_schools, na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_num_schools,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = num_schools,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r all-in-one, warning=FALSE}
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(num_closed = sum(num_closed), 
            across(where(is.numeric), ~mean(., na.rm = T))) |> 
  pivot_longer(cols = -num_closed & is.numeric, 
               names_to = 'variable', 
               values_to = 'value') |> 
  ggplot(aes(x = num_closed,
             y = value)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red") +
  facet_wrap(~variable, 
             scales = 'free')
```

## Test Linearity

### Time

```{r fit-time}
mlfit <- lm(num_closed ~ year, 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(as.numeric(year), 2), # quadratic effect
            data = closure_dist_CA)
mdfit <- lm(num_closed ~ as.factor(closure_dist_CA$year), 
            data = closure_dist_CA) # time dummies

summary(mlfit)
summary(mqfit)
summary(mdfit)
```

```{r test-time}
anova(mqfit, mlfit) 
anova(mdfit, mlfit)
```

### Percentage of District Enrollment

```{r fit-pct-dist-enrollment}
mlfit <- lm(num_closed ~ as.numeric(avg_schl_pct_dist_enroll), 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(as.numeric(year), 2), 
            data = closure_dist_CA)
mdfit <- lm(num_closed ~ as.factor(closure_dist_CA$year), 
            data = closure_dist_CA) 
summary(mlfit)
summary(mqfit)
summary(mdfit)
```

```{r test-pct-dist-enrollment}
anova(mqfit, mlfit) 
anova(mdfit, mlfit)
```

### District Student-Teacher Ratio

```{r fit-st-ratio}
mlfit <- lm(num_closed ~ as.numeric(st_ratio), 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(as.numeric(year), 2), 
            data = closure_dist_CA)
mdfit <- lm(num_closed ~ as.factor(closure_dist_CA$year), 
            data = closure_dist_CA) 

summary(mlfit)
summary(mqfit)
summary(mdfit)
```

```{r test-st-ratio}
anova(mqfit, mlfit) 
anova(mdfit, mlfit)
```

### Average School Student-Teacher Ratio

```{r fit-avg-st-ratio}
mlfit <- lm(num_closed ~ as.numeric(avg_schl_st_ratio), 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(as.numeric(year), 2), 
            data = closure_dist_CA)
mdfit <- lm(num_closed ~ as.factor(closure_dist_CA$year), 
            data = closure_dist_CA) 

summary(mlfit)
summary(mqfit)
summary(mdfit)
```

```{r test--avg-st-ratio}
anova(mqfit, mlfit) 
anova(mdfit, mlfit) 
```

### Per-Pupil Expenditure

```{r fit-per-pupil-expend}
mlfit <- lm(num_closed ~ as.numeric(per_pupil_expend), 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(as.numeric(year), 2), 
            data = closure_dist_CA)
mdfit <- lm(num_closed ~ as.factor(closure_dist_CA$year), 
            data = closure_dist_CA) 

summary(mlfit)
summary(mqfit)
summary(mdfit)
```

```{r test-per-pupil-expend}
anova(mqfit, mlfit) 
anova(mdfit, mlfit) 
```

### Number of Schools

```{r fit-num-schools}
mlfit <- lm(num_closed ~ as.numeric(num_schools), 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(as.numeric(year), 2), 
            data = closure_dist_CA)
mdfit <- lm(num_closed ~ as.factor(closure_dist_CA$year), 
            data = closure_dist_CA) 

summary(mlfit)
summary(mqfit)
summary(mdfit)
```

```{r test-num-schools}
anova(mqfit, mlfit) 
anova(mdfit, mlfit) 
```

### Conclusions

-   Time should be quadratic

-   Percentage of District Enrollment should be linear

## Build and Test Models

```{r standardize}
closure_dist_CA <- closure_dist_CA |> 
  mutate(across(where(is.numeric) & !year, scale),
         across(where(is.numeric) & !year, as.vector), 
         year = year - min(year)) 


#DISTRICT LEVEL
#location_type

#TIME LEVEL
#schl_pct_dist_enroll
#schl_st_ratio
#num_school_more_diverse ???, could also try specific racial identity parameters
#dist_st_ratio
#dist_per_pupil_expend
#dist_num_schools
```

## Step 1: Base Model with Time Predictor

```{r base-model-time}
m1 <- lm(num_closed ~ year ,  data = closure_dist_CA)
summary(m1)
```

```{r model-random-intercept}
m2 <- lmer(num_closed ~ year + (1 | agency_id) ,  data = closure_dist_CA, REML = F)
summary(m2)
```

```{r compare-models-m1-m2}
anova(m2, m1)
```

```{r icc}
icc(m2)
```

## Step 2: Model with time-varying predictors

```{r model-time-varying}
m3 <- lmer(num_closed ~ year
           + avg_schl_pct_dist_enroll
           + avg_schl_st_ratio
           + (1 | agency_id),
           data = closure_dist_CA,
           REML = F)
summary(m3)
```

```{r compare-m2-m3}
anova(m3, m2)
```

## Step 3: A model with time invariant predictors

```{r model-time-invariant}
m4 <- lmer(num_closed ~ year
           + avg_schl_pct_dist_enroll
           + avg_schl_st_ratio
           + per_pupil_expend
           + st_ratio
           + num_schools
           + (1 | agency_id),
           data = closure_dist_CA,
           REML = F)
summary(m4)
```

```{r}
anova(m4, m3)
```

## Step 4 a model with level 2 predictors

```{r model-random-slopes}
m5 <- lmer(num_closed ~ year
           + avg_schl_pct_dist_enroll
           + avg_schl_st_ratio
           + per_pupil_expend
           + st_ratio
           + num_schools
           + (1 | agency_id)
           + (0 + year | agency_id),
           data = closure_dist_CA,
           REML = F)
summary(m5)

```

```{r}
anova(m5, m4)
```

## A model with covariance

```{r model-covariance}
m6 <- lmer(num_closed ~ year
           + avg_schl_pct_dist_enroll
           + avg_schl_st_ratio
           + per_pupil_expend
           + st_ratio
           + num_schools
           + (1 + year | agency_id),
           data = closure_dist_CA,
           REML = F)
summary(m6)
```

```{r}
anova(m6, m5)
```

## A model with cross level interactions

```{r cross-level-interactions}
m7 <- lmer(num_closed ~ year
           + avg_schl_pct_dist_enroll
           + avg_schl_st_ratio
           + per_pupil_expend
           + st_ratio
           + num_schools
           + I(per_pupil_expend*avg_schl_st_ratio)
           + (1 + year | agency_id),
           data = closure_dist_CA,
           REML = F)
summary(m7)
```

```{r}
anova(m7, m6)
```
