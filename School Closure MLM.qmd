---
title: "School Closure MLM"
author: "mlc"
format: html
editor: visual
---

# Setup

```{r libraries, message=FALSE, warning=FALSE}
library(tidyverse)
library(lme4)
library(lmerTest)
library(performance)
library(lattice)
library(here)
library(janitor) #for clean_names()
library(GGally) #for correlation matrix
library(corrplot) #for correlation matrix
library(plotly)
library(naniar)
library(caret) #for up and down sampling
library(beepr) #for noises to alert when code is done running!
library(JWileymisc) #for winsorizor()
library(sjPlot)
```

```{r load-data, message=FALSE}
closure <- read_csv("school_district_theil_index.csv")
district_states <- read_csv("district_state_info.csv", skip = 6)
district_states <- clean_names(district_states)

district_states <- district_states |> 
  rename(agency_id = starts_with("agency_id"), 
         dist_state_name = starts_with('state_name'),
         dist_state_abbr = starts_with('state_abbr')) |> 
  mutate(agency_id = as.numeric(agency_id), 
         dist_state_abbr = as.factor(dist_state_abbr), 
         dist_state_name = as.factor(dist_state_name))

closure <- left_join(closure, 
                     district_states, 
                     by = join_by(agency_id))
rm(district_states)

closure <- closure |> 
  dplyr::select(agency_id, 
                school_id, 
                year, 
                school_name, 
                dist_state_name, 
                dist_state_abbr, 
                everything())
```

```{r initial-set-up}
closure <- closure |> 
  mutate(school_level = if_else(school_level == 5 | school_level ==6, 4, school_level)) 

#Recreate location type from dummy variables, including NA's where appropriate
location_known <- closure |> 
  pivot_longer(cols = c(urban, suburban, rural), 
               names_to = "location_type") |> 
  mutate(location_type = if_else(value == 0, NA, location_type)) |>
  filter(value == 1) |>
  dplyr::select(-value)
  
rows_without_location <- closure |> 
  pivot_longer(cols = c(urban, suburban, rural), 
               names_to = "location_type") |> 
  mutate(location_type = if_else(value == 0, NA, location_type)) |>
  distinct() |> 
  filter(value == 0) |>
  dplyr::select(-value) 

location_unknown <- anti_join(rows_without_location, location_known, 
                              by = join_by(school_id, year))

closure <- bind_rows(location_known, location_unknown) 
rm(location_known, location_unknown, rows_without_location)


#Remove persisting rows for schools after they close
closure <- closure |> 
  #Find year school closed
  group_by(school_id, year) |> 
  filter(closed == 1) |> 
  summarize(year_closed = year, 
            .groups = 'keep') |> 
  ungroup() |> 
  dplyr::select(-year) |> 
  #Filter to only include years less than or equal to that year for each school
  right_join(closure) |> 
  mutate(year_closed = if_else(is.na(year_closed), Year(Today()), year_closed)) |> 
  filter(year <= year_closed) |> 
  dplyr::select(year_closed, agency_id, school_id, school_name, year, closed, everything()) |> 
  dplyr::select(-year_closed, -agency_name)


#Create factors
closure <- closure |> 
  mutate(school_id = factor(school_id, levels = unique(school_id)), 
         agency_id = factor(agency_id, levels = unique(agency_id)), 
         #year = factor(year, levels = unique(year)),
         #closed = factor(closed, levels = unique(closed)),
         school_level = factor(school_level, levels = unique(school_level)), 
         charter = factor(charter, levels = unique(charter)), 
         magnet = factor(magnet, levels = unique(magnet)), 
         title1 = factor(title1, levels = unique(title1)), 
         location_type = factor(location_type, levels = unique(location_type)))
```

```{r cleaning-variables}
#Correct Location Types

#Create Mode function to find the most common value that is not NA
Mode <- function(x, na.rm = FALSE) {
  if(na.rm){
    x = x[!is.na(x)]
  }

  ux <- unique(x)
  return(ux[which.max(tabulate(match(x, ux)))])
}

closure <- closure |> 
  group_by(school_id) |> 
  mutate(most_common_location = Mode(location_type, na.rm = TRUE)) |> 
  mutate(location_type = most_common_location) |> 
  ungroup() |> 
  dplyr::select(-most_common_location)



#Correct Percentages/Ratios
  #maxval's chosen based on distributions
closure$st_ratio <- winsorizor(closure$st_ratio, 
                               percentile = c(0.05, 0.95), 
                               na.rm = TRUE)

closure$dist_st_ratio <- winsorizor(closure$dist_st_ratio, 
                                    percentile = c(0.05, 0.95), 
                                    na.rm = TRUE)

  #all percentages higher than 100 capped to 100
closure <- closure |>  
  mutate(across((starts_with("dist_pct")), ~if_else(. > 1, 1, .)), 
         pct_frpl = if_else(pct_frpl > 1, 1, pct_frpl))


#Fix districts indicating no students enrollled
closure <- closure |> 
  group_by(agency_id, year) |> 
  mutate(dist_tot_students = if_else(dist_tot_students == 0, 
                                     sum(tot_students), 
                                     dist_tot_students), 
         dist_tot_students = if_else(dist_tot_students == 0, 
                                    NA, 
                                    dist_tot_students), 
         tot_students = if_else(tot_students == 0, 
                                    NA, 
                                    tot_students)) |> 
  ungroup() 



#Title1 Categories (Can I get a clean yes/no)
```

```{r creating-variables}
#Enrollment Trends
closure <- closure |> 
  group_by(school_id) |> 
  mutate(three_yr_enroll_schl = tot_students - dplyr::lag(tot_students, n = 3), 
         three_yr_enroll_dist = dist_tot_students - dplyr::lag(dist_tot_students, n = 3)) |>
  ungroup()


#What percent of of District Enrollment is at a given school? 
closure <- closure |> 
  mutate(pct_dist_enroll = tot_students/dist_tot_students)

#Is the school more diverse than the district? 
closure <- closure |> 
  mutate(school_more_diverse = if_else(sch_theil < dist_theil, "Yes", "No"))

#Calculate the number of schools a district has within a given year
# closure <- closure |> 
#   group_by(agency_id, year) |> 
#   mutate(dist_num_schools = n_distinct(school_id)) |> 
#   ungroup()
```

```{r cleaning-dist-pct-enroll}
#Fixing dist_tot_student totals for schools and years where the pct was over 100 (dist count wasn't 0, but was still too low, single digit counts)

closure <- closure |> 
  group_by(agency_id, year) |> 
  mutate(dist_tot_students = if_else(pct_dist_enroll > 100, 
                                     sum(tot_students), 
                                     dist_tot_students), 
         pct_dist_enroll = if_else(pct_dist_enroll > 100, 
                                   tot_students/dist_tot_students, 
                                   pct_dist_enroll)) |> 
  ungroup()  

summary(closure$pct_dist_enroll)
```

```{r aggregate-to-district-level}
closure_dist <- closure |> 
  mutate(closed = as.numeric(closed)) |>
  rename_with(~ gsub("^tot_", "avg_schl_tot_", .x), starts_with("tot_")) |> 
  rename_with(~ gsub("^pct_", "avg_schl_pct_", .x), starts_with("pct_")) 

closure_dist <- closure_dist |> 
  group_by(agency_id, year) |> 
  summarize(num_closed = sum(closed),
            num_schools = n_distinct(school_id),
            avg_schl_theil = mean(sch_theil),
            num_schl_more_diverse = sum(school_more_diverse == 'Yes'),
            num_level_elem = sum(school_level == 1), 
            num_level_midd = sum(school_level == 2), 
            num_level_high = sum(school_level == 3), 
            num_level_other = sum(school_level == 4), 
            num_charter = sum(charter == '1-Yes'), 
            num_magnet = sum(magnet == '1-Yes'), 
            num_title_1 = sum(title1 == '1-Yes'), 
            avg_schl_st_ratio = mean(st_ratio), 
            location_type = Mode(location_type),
            across(starts_with('avg_schl_tot_'), mean), 
            across(starts_with('avg_schl_pct_'), mean), 
            avg_schl_3_yr_enroll_change = mean(three_yr_enroll_schl), 
            across(starts_with('dist_'), ~ first(.)), 
            .groups = 'keep') |>
  ungroup() 
```

```{r clean-up-closure-dist}
#Add District Enrollment Trends
closure_dist <- closure_dist |> 
  group_by(agency_id) |> 
  mutate(three_yr_enroll_dist = dist_tot_students - dplyr::lag(dist_tot_students, n = 3)) |>
  ungroup()

#Arranging Data for Readability
closure_dist <- closure_dist |> 
  select(agency_id, year, 
         dist_state_name, dist_state_abbr, location_type, 
         num_closed, num_schools, everything()) |> 
  rename_with(~str_remove(.x, "^dist_"), starts_with("dist_")) 

closure_dist
```

```{r filter-CA}
closure_dist_CA <- closure_dist |> 
  filter(state_abbr == "CA") 

closure_dist_CA
```

```{r alert-data-is-ready}
beep(sound = 8)
```

# Check Data

```{r check-level}
closure_dist_CA |>
  group_by(agency_id) |>
  summarize(across(where(is.numeric), ~ sd(., na.rm = TRUE)))

#All numerical variables are time-varying
```

```{r data-characteristics, message=FALSE}
#Number of Districts
n_distinct(closure_dist_CA$agency_id)
n_distinct(closure_dist_CA$year)

closure_dist_CA

#Number of Schools, Closures and Districts Over Time
closure_dist_CA |> 
  group_by(year) |> 
  summarize(num_schools = sum(num_schools), 
            num_closed = sum(num_closed), 
            num_dists = n_distinct(agency_id)) |> 
  ungroup()

#Mean and SD for all predictor variables over time
left_join(
  closure_dist_CA |> 
    group_by(year) |> 
    summarise(across(where(is.numeric), ~mean(., na.rm = T))) |> 
    ungroup(), 
  closure_dist_CA |> 
    group_by(year) |> 
    summarise(across(where(is.numeric), ~sd(., na.rm = T))) |> 
    ungroup(), 
  by = join_by(year), 
  suffix = c("_mean", "_sd")) |> 
  pivot_longer(cols = -year, 
               names_to = "variable", 
               values_to = 'value') |> 
  arrange(year, variable) |> 
  mutate(value= round(value, digits = 2)) |> 
  pivot_wider(names_from = variable, 
              values_from = value)


##Mean and SD for all predictor variables (no respect to time)
bind_rows(
  closure_dist_CA |> 
    summarise(across(where(is.numeric), ~mean(., na.rm = T))) |> 
    mutate(stat = 'mean') |> 
    select(stat, everything(), -year), 
  closure_dist_CA |> 
    summarise(across(where(is.numeric), ~sd(., na.rm = T))) |> 
    mutate(stat = 'sd') |> 
    select(stat, everything(), -year), 
  closure_dist_CA |> 
    summarise(across(where(is.numeric), ~max(., na.rm = T))) |> 
    mutate(stat = 'max') |> 
    select(stat, everything(), -year)) |> 
  pivot_longer(cols = -stat, 
               names_to = "variable", 
               values_to = 'value') |> 
  arrange(stat, variable) |> 
  mutate(value = round(value, digits = 2)) |> 
  pivot_wider(names_from = stat, 
              values_from = value)


closure_dist_CA |> 
  summarize(n = n_distinct(agency_id))

closure_dist_CA |> 
  group_by(location_type) |> 
  summarize(n = n_distinct(agency_id)) |> 
  ungroup()
```

```{r viz-closures}
closure_dist_CA |> 
  group_by(year) |> 
  summarize(num_dists = n_distinct(agency_id),
            num_schools = sum(num_schools),
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot() +
  geom_line(aes(x = year, 
                y = num_closed, 
                color = "Number of Schools Closed"), 
            linewidth = 2) +
  geom_line(aes(x = year, 
                y = num_schools / 50, 
                color = "Total Number of Schools"), 
            linewidth = 2) +
  scale_y_continuous(
    sec.axis = sec_axis(~ . * 50, 
                        name = "Number of Schools")) +
  annotate("text", 
           x = 2003, 
           y = 8, 
           label = "Closed Schools", 
           vjust = -0.5, hjust = 1, 
           color = 'red4') +  # Add label for closed schools
  annotate("text", 
           x = 2003, 
           y = 8000 / 50,  
           label = "Total Schools", 
           vjust = 1, hjust = 1, 
           color = 'blue4') +  # Add label for total schools
  scale_color_manual(values = c('red4', 'blue4')) +
  labs(title = "Trends for Schools Closed and Number of Schools",
       y = "Number of Closed Schools",
       x = "Year",
       color = "Scale") +
  theme_minimal() + 
  theme(legend.position = 'none')
```

```{r viz-closures-by-locale}
#Percentage of Districts Closing Schools
closure_dist_CA |> 
  mutate(clsd = if_else(num_closed > 0, 1, 0)) |> 
  group_by(year, location_type) |> 
  summarize(num_dist = n(), 
            pct_dists_w_cl = sum(clsd)/num_dist,
            .groups = 'keep') |> 
  ungroup() |> 
  filter(!is.na(location_type)) |> 
  ggplot(aes(x = year, 
             y = pct_dists_w_cl)) + 
  geom_line(linewidth = 2, 
            color = 'red4') + 
  geom_point(size = 3, 
             color = 'red4') +
  facet_grid(~location_type) +
  theme_minimal() + 
  labs(color = "Locale", 
       title = "Larger Percentage of Urban Districts Face Closures in California", 
       x = "Year", 
       y = "Percentage of Districts Closing Schools") + 
  theme(legend.position = 'none') 


#Number of Closures
closure_dist_CA |> 
  group_by(year, location_type) |> 
  summarize(num_schools = sum(num_schools), 
            num_closed = sum(num_closed), 
            num_dists = n_distinct(agency_id), 
            .groups = 'keep') |> 
  ungroup() |> 
  ggplot(aes(x = year, 
             y = num_closed, 
             color = forcats::fct_reorder(location_type, num_closed))) + 
  geom_line(linewidth = 2) +
  geom_point(size = 3) +
  theme_minimal() + 
  scale_color_manual(values = c("red3", 'red', 'green4')) +
  labs(title = 'School Closures by District Locale',
       subtitle = 'In California, Suburban and Urban Districts Have Faced the Most Closures',
       x = 'Year',
       y = 'Number of Schools Closed',
       color = "Locale") + 
  facet_grid(~location_type) + 
  theme(legend.position = 'none')


```

```{r viz-var-summary-over-time}
#Means and SDs
left_join(
  closure_dist_CA |> 
    group_by(year) |> 
    summarise(across(where(is.numeric), ~mean(., na.rm = T))) |> 
    ungroup(), 
  closure_dist_CA |> 
    group_by(year) |> 
    summarise(across(where(is.numeric), ~sd(., na.rm = T))) |> 
    ungroup(), 
  by = join_by(year), 
  suffix = c("_mean", "_sd")) |> 
  pivot_longer(cols = -year, 
               names_to = "variable", 
               values_to = 'value') |> 
  ggplot(aes(x = year, 
             y = value)) + 
  geom_line() + 
  facet_wrap(~variable, scales = 'free', ncol = 2)

#All Variables
closure_dist_CA |> 
    group_by(year) |> 
    summarise(across(where(is.numeric) & (starts_with('avg_') | contains('ratio')), 
                                          ~mean(., na.rm = T)), 
              across(where(is.numeric), ~sum(., na.rm = T))) |> 
    ungroup() |> 
  pivot_longer(cols = -year, 
               names_to = "variable", 
               values_to = 'value') |> 
  ggplot(aes(x = year, 
             y = value, 
             color = variable)) + 
  geom_line(linewidth = 1.5) + 
  facet_wrap(~variable, scales = 'free', ncol = 1) + 
  theme_minimal() +
  labs(title = 'Predictor Variable Trends', 
       x = 'Year', 
       y = 'Value') +
  theme(legend.position = 'none')

##PARTITIONED BY SCALES
#Values 0-100
closure_dist_CA |> 
    group_by(year) |> 
    summarise(across(where(is.numeric) & (starts_with('avg_') | contains('ratio')), 
                                          ~mean(., na.rm = T)), 
              across(where(is.numeric), ~sum(., na.rm = T))) |> 
    ungroup() |> 
  pivot_longer(cols = -year, 
               names_to = "variable", 
               values_to = 'value') |> 
  filter(value < 100) |> 
  mutate(value = if_else(variable == 'avg_schl_pct_dist_enroll', 
                         value * 100, 
                         value)) |> 
  ggplot(aes(x = year, 
             y = value, 
             color = variable)) + 
  geom_line()

#Values over 1000
closure_dist_CA |> 
    group_by(year) |> 
    summarise(across(where(is.numeric) & (starts_with('avg_') | contains('ratio')), 
                                          ~mean(., na.rm = T)), 
              across(where(is.numeric), ~sum(., na.rm = T))) |> 
    ungroup() |> 
  pivot_longer(cols = -year, 
               names_to = "variable", 
               values_to = 'value') |> 
  filter(value > 100) |> 
  mutate(value = if_else(variable == 'per_pupil_expend', 
                         value / 1000, 
                         value)) |> 
  ggplot(aes(x = year, 
             y = value, 
             color = variable)) + 
  geom_line()
```

```{r viz-school-count-vs-diverse}
#Num Schools vs Num More Diverse
closure_dist_CA |> 
    group_by(year) |> 
    summarise(across(where(is.numeric) & (starts_with('avg_') | contains('ratio')), 
                                          ~mean(., na.rm = T)), 
              across(where(is.numeric), ~sum(., na.rm = T))) |> 
    ungroup() |> 
  pivot_longer(cols = -year, 
               names_to = "variable", 
               values_to = 'value') |> 
  filter(value > 100 & variable != "per_pupil_expend") |> 
  ggplot(aes(x = year, 
             y = value, 
             color = variable)) + 
  geom_line(linewidth = 2) + 
  theme_minimal() +
  annotate("text", 
           x = 2004, 
           y = 1200, 
           label = "Schools More Diverse\nThan the District", 
           vjust = -0.5, hjust = 1, 
           color = 'red4') +  # Add label for closed schools
  annotate("text", 
           x = 2003, 
           y =7000,  
           label = "Total Schools", 
           vjust = 1, hjust = 1, 
           color = 'green4') +  # Add label for total schools
  scale_color_manual(values = c('red4', 'green4')) +
  labs(title = "Trends for Schools Closed and Number of Schools More Diverse Than District",
       y = "Number of Schools",
       x = "Year",
       color = "Scale") +
  theme_minimal() + 
  theme(legend.position = 'none')


closure_dist_CA |> 
  group_by(year) |> 
  summarize(num_dists = n_distinct(agency_id),
            num_schools = sum(num_schools),
            num_closed = sum(num_closed), 
            num_diverse = sum(num_schl_more_diverse)) |> 
  ungroup() |> 
  ggplot() +
  geom_line(aes(x = year, 
                y = num_closed, 
                color = "Number of Schools Closed"), 
            linewidth = 2) +
  geom_line(aes(x = year, 
                y = num_diverse / 10, 
                color = "Number of Schools More Diverse"), 
            linewidth = 2) +
  scale_y_continuous(
    sec.axis = sec_axis(~ . * 10, 
                        name = "Number of Schools More Diverse")) +
  annotate("text", 
           x = 2003, 
           y = 50, 
           label = "Closed Schools", 
           vjust = -0.5, hjust = 1, 
           color = 'red4') +  # Add label for closed schools
  annotate("text", 
           x = 2004, 
           y = 3000 / 10,  
           label = "Schools More Diverse", 
           vjust = 1, hjust = 1, 
           color = 'green4') +  # Add label for total schools
  scale_color_manual(values = c('red4', 'green4')) +
  labs(title = "Trends for Schools Closed and Number of Schools More Diverse",
       y = "Number of Closed Schools",
       x = "Year",
       color = "Scale") +
  theme_minimal() + 
  theme(legend.position = 'none')
```

```{r select-vars-and-remove-NAs}
closure_dist_CA <- closure_dist_CA |> 
  select(agency_id, year, num_closed,
         location_type,
         avg_schl_pct_dist_enroll, 
         avg_schl_st_ratio, 
         num_schl_more_diverse, 
         st_ratio, 
         per_pupil_expend, 
         num_schools) |>  
  na.omit()


#DISTRICT LEVEL
#location_type

#TIME LEVEL
#schl_pct_dist_enroll
#schl_st_ratio
#num_school_more_diverse ???, could also try specific racial identity parameters
#dist_st_ratio
#dist_per_pupil_expend
#dist_num_schools
```

# 5 Hypothesis

## Examine Linearity and Outliers

```{r check-linearity-year}
closure_dist_CA |> 
  group_by(year) |> 
  summarize(num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = year,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-pct-dist-enroll}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_pct_dist_enroll = mean(avg_schl_pct_dist_enroll, 
                                       na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_pct_dist_enroll,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = avg_schl_pct_dist_enroll,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-dist-st-ratio}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_st_ratio = mean(st_ratio, na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_st_ratio,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = st_ratio,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-schl-st-ratio}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_schl_st = mean(avg_schl_st_ratio, na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_schl_st,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = avg_schl_st_ratio,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-per-pupil}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_per_pupil = mean(per_pupil_expend, na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_per_pupil,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = per_pupil_expend,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r check-linearity-num-schools}
#District Level
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(avg_num_schools = mean(num_schools, na.rm = T), 
            num_closed = sum(num_closed)) |> 
  ungroup() |> 
  ggplot(aes(x = avg_num_schools,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")

#Time Level
closure_dist_CA |> 
  ggplot(aes(x = num_schools,
             y = num_closed)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red")
```

```{r all-in-one, warning=FALSE}
closure_dist_CA |> 
  group_by(agency_id) |> 
  summarize(num_closed = sum(num_closed), 
            across(where(is.numeric), ~mean(., na.rm = T))) |> 
  pivot_longer(cols = -num_closed & is.numeric, 
               names_to = 'variable', 
               values_to = 'value') |> 
  ggplot(aes(x = num_closed,
             y = value)) +
  geom_point() +
  geom_smooth(method = "loess", se = F) + # flexible model
  geom_smooth(method = "lm", se = F, colour = "red") +
  facet_wrap(~variable, 
             scales = 'free')
```

## Test Linearity

### Time

```{r fit-time}
mlfit <- lm(num_closed ~ year, 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(as.numeric(year), 2), # quadratic effect
            data = closure_dist_CA)
mdfit <- lm(num_closed ~ as.factor(closure_dist_CA$year), 
            data = closure_dist_CA) # time dummies

# summary(mlfit)
# summary(mqfit)
# summary(mdfit)
```

```{r test-time}
anova(mqfit, mlfit) 
anova(mdfit, mlfit)
anova(mqfit, mdfit)

# Year should be quadratic
```

### Percentage of District Enrollment

```{r fit-pct-dist-enrollment}
mlfit <- lm(num_closed ~ avg_schl_pct_dist_enroll, 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(avg_schl_pct_dist_enroll, 2), 
            data = closure_dist_CA)

# summary(mlfit)
# summary(mqfit)
```

```{r test-pct-dist-enrollment}
anova(mqfit, mlfit) 
```

### District Student-Teacher Ratio

```{r fit-st-ratio}
mlfit <- lm(num_closed ~ st_ratio, 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(st_ratio, 2), 
            data = closure_dist_CA)

# summary(mlfit)
# summary(mqfit)
```

```{r test-st-ratio}
anova(mqfit, mlfit)
```

### Average School Student-Teacher Ratio

```{r fit-avg-st-ratio}
mlfit <- lm(num_closed ~ avg_schl_st_ratio, 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(avg_schl_st_ratio, 2), 
            data = closure_dist_CA)

# summary(mlfit)
# summary(mqfit)

# Doesn't show significance
```

```{r test--avg-st-ratio}
anova(mqfit, mlfit) 
```

### Per-Pupil Expenditure

```{r fit-per-pupil-expend}
mlfit <- lm(num_closed ~ per_pupil_expend, 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(per_pupil_expend, 2), 
            data = closure_dist_CA)

summary(mlfit)
summary(mqfit)

#Doesn't show significance
```

```{r test-per-pupil-expend}
anova(mqfit, mlfit) 
```

### Number of Schools

```{r fit-num-schools}
mlfit <- lm(num_closed ~ num_schools, 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(num_schools, 2), 
            data = closure_dist_CA)

# summary(mlfit)
# summary(mqfit)
```

```{r test-num-schools}
anova(mqfit, mlfit) 
```

### Location Type

```{r fit-location-type}
mlfit <- lm(num_closed ~ location_type, 
            data = closure_dist_CA)
mqfit <- lm(num_closed ~ poly(location_type, 2), 
            data = closure_dist_CA)

summary(mlfit)
summary(mqfit)
```

```{r test-num-schools}
anova(mqfit, mlfit) 
```

### Variables Determined to fit Quadratically

-   Time

-   Number of Schools

-   avg_schl_pct_dist_enroll

```{r conserve-space}
rm(mlfit, mqfit)
```

## Build and Test Models

```{r standardize}
closure_dist_CA_std <- closure_dist_CA |> 
  mutate(across(where(is.numeric) & !year, scale),
         across(where(is.numeric) & !year, as.vector), 
         year = year - min(year)) 


#DISTRICT LEVEL
#location_type

#TIME LEVEL
#schl_pct_dist_enroll
#schl_st_ratio
#num_school_more_diverse ???, could also try specific racial identity parameters
#dist_st_ratio
#dist_per_pupil_expend
#dist_num_schools
```

## Step 1: Base Model with Time Predictor

```{r base-model-time}
m1 <- lm(num_closed ~ year ,  
         data = closure_dist_CA_std)
summary(m1)
```

```{r model-random-intercept}
m2 <- lmer(num_closed ~ year + (1 | agency_id) ,  
           data = closure_dist_CA_std, 
           REML = F)

summary(m2)
```

```{r compare-models-m1-m2}
anova(m2, m1)
```

```{r icc}
icc(m2)
```

## Step 2: Model with time-varying predictors

```{r model-time-varying}
m3 <- lmer(num_closed ~ 
             I(year*year)
           + I(avg_schl_pct_dist_enroll*avg_schl_pct_dist_enroll)
           + avg_schl_st_ratio 
           + per_pupil_expend
           + st_ratio
           + I(num_schools*num_schools)
           + (1 | agency_id),
           data = closure_dist_CA_std,
           REML = F)

summary(m3)
```

```{r compare-m2-m3}
anova(m3, m2)
```

## Step 3: A model with time invariant predictors - WE DON'T HAVE THESE

```{r model-time-invariant}
# m4 <- lmer(num_closed ~ 
#              poly(year, 2)
#            + poly(avg_schl_pct_dist_enroll, 2)
#            + avg_schl_st_ratio 
#            + per_pupil_expend
#            + st_ratio
#            + poly(num_schools, 2) 
#            + location_type
#            + (1 | agency_id),
#            data = closure_dist_CA_std,
#            REML = F)
# 
# summary(m4)
```

```{r compare-m3-m4}
# anova(m4, m3)
```

## Step 4 a model with level 2 predictors

```{r model-random-slopes}
m5 <- lmer(num_closed ~ 
             I(year*year)
           + I(avg_schl_pct_dist_enroll*avg_schl_pct_dist_enroll)
           + avg_schl_st_ratio 
           + per_pupil_expend
           + st_ratio
           + I(num_schools*num_schools)
           + location_type
           + (1 | agency_id),
           data = closure_dist_CA_std,
           REML = F)
summary(m5)
```

```{r compare-m4-m5}
anova(m5, m3)
```

## A model with covariance

```{r model-covariance}
m6 <- lmer(num_closed ~              
             I(year*year)
           + I(avg_schl_pct_dist_enroll*avg_schl_pct_dist_enroll)
           + avg_schl_st_ratio 
           + per_pupil_expend
           + st_ratio
           + I(num_schools*num_schools)
           + location_type
           + (1 + year | agency_id),
           data = closure_dist_CA_std,
           REML = F)

summary(m6)
```

```{r compare-m5-m6}
anova(m6, m5)
```

## A model with cross level interactions

#### This doesn't appear to be working for interactions with location_type (the only level 2 variable we have)

```{r cross-level-interactions}
m7 <- lmer(num_closed ~              
             I(year*year)
           + I(avg_schl_pct_dist_enroll*avg_schl_pct_dist_enroll)
           + avg_schl_st_ratio 
           + per_pupil_expend
           + st_ratio
           + I(num_schools*num_schools)
           + location_type
           + I(per_pupil_expend * avg_schl_st_ratio)
           + (1 + year | agency_id),
           data = closure_dist_CA_std,
           REML = F)
summary(m7)
```

```{r compare-m6-m7}
anova(m7, m6)
```

## A model with random slopes

```{r random-slopes}
m8 <- lmer(num_closed ~ 
             I(year*year)
           + I(avg_schl_pct_dist_enroll*avg_schl_pct_dist_enroll)
           + avg_schl_st_ratio 
           + per_pupil_expend
           + st_ratio
           + I(num_schools*num_schools)
           + location_type
           + (1 + year + location_type | agency_id),
           data = closure_dist_CA_std,
           REML = F)

summary(m8)
tab_model( m2, m3, m5, m6, m8,
           dv.labels = c('with Random Intercept', "with time-varying predictors", "with level 2 predictors", "with covariance", "with random slopes"),
           show.ci = FALSE)
```

```{r compare-m5andm6-m8}
anova(m8, m7)
anova(m8, m6)
anova(m8, m5)
```

```{r check-REML}
m9 <- lmer(num_closed ~ 
             I(year*year)
           #+ I(avg_schl_pct_dist_enroll*avg_schl_pct_dist_enroll)
           + avg_schl_st_ratio 
           + per_pupil_expend
           + st_ratio
           + I(num_schools*num_schools)
           + location_type
           + (1 + year + location_type | agency_id),
           data = closure_dist_CA_std,
           REML = T)
summary(m8)
summary(m9)
```

# Variance Explained

Calculate the total variance explained for our final model

```{r}

```

# Check error plots of model - COPIED FROM LAB

```{r residual-errors}
closure_dist_CA_std$r_std <- scale(resid(m8))
qqnorm(closure_dist_CA_std$r_std, pch = 1)
qqline(closure_dist_CA_std$r_std, col = "red")
```

????

```{r residual-errors-predicted-attitudes}
closure_dist_CA_std <- mutate(closure_dist_CA_std, 
                              num_closed_hat_ml = fitted(m8))

ggplot(closure_dist_CA_std, 
       aes(x = num_closed_hat_ml, 
           y = r_std)) +
  geom_point() +
  xlab("Predicted number of closures") +
  ylab("Standardized residuals") + 
  geom_hline(yintercept = 0, color = "red")
```

?????

```{r random-intercept-errors}
# Need to find a way to add these back to the tibble
u <- as_tibble(as.data.frame(ranef(m6)[1])) |>
  rename(u2 = agency_id..Intercept., u1 = agency_id.year) |>
  mutate(agency_id =  as_factor(1:1017)) |>
  inner_join(closure_dist_CA_std)

ggplot(u, 
       aes(x = num_closed_hat_ml, 
           y = u2)) +
  geom_point() +
  xlab("Predicted number of closures") +
  ylab("Intercept") + 
  geom_hline(yintercept = 0, color = "red")
```

????

```{r random-slope-errors}
ggplot(u, aes(x = num_closed_hat_ml, y = u1)) +
  geom_point() +
  xlab("Predicted attitudes") +
  ylab("Slope") + 
  geom_hline(yintercept = 0, color = "red")
```

???

```{r caterpillar-plots}
u_condvar <- ranef(m8, condVar = TRUE)
varcovar <- attr(u_condvar$id, "postVar")
myplots <- list()

# for each random effect
for (i in 1:length(u_condvar$id)) {
  # select the random parameter value
  myu <- u_condvar$id[i]
  names(myu) <- "myu"
  # select the variance, take the square root to get the standard error
  myu_se <- apply(varcovar, 3, function(x) sqrt(x[i,i]))   
  # combine them and arrange my myu and add a rank
  u_se <- as_tibble(cbind(myu, myu_se)) |>
    arrange(myu) |>
    mutate(rank = 1:237)
  # and store the plots in a list with two elements
  myylabs <- c("Intercept", "Slope")
  myplots[[i]] <- ggplot(u_se, aes(x = rank, y = myu)) +
    geom_errorbar(aes(ymin = myu - (myu_se * 1.39), 
                      ymax = myu + (myu_se * 1.39))) + 
    geom_point() +
    geom_hline(yintercept = 0, color = "red") +
    ylab(myylabs[i]) +
    xlab("Rank")
}    


myplots[[1]]
myplots[[2]]   

```

?????

Check error plots of final model

```{r error-plots-m10}
closure_dist_CA_std$r_std <- scale(resid(m8))
qqnorm(closure_dist_CA_std$r_std, pch = 1)
qqline(closure_dist_CA_std$r_std, col = "red")

attitudes <- mutate(attitudes, attitude_hat_ml = fitted(m7))
ggplot(attitudes, aes(x = attitude_hat_ml, y = r_std)) +
  geom_point() +
  xlab("Predicted attitudes") +
  ylab("Standardized residuals") + 
  geom_hline(yintercept = 0, color = "red")

u <- as_tibble(as.data.frame(ranef(m10)[1])) |>
  rename(u2 = id..Intercept., 
         u1_time = id.time_r, 
         u1_exposure = id.exposure_c) |>
  mutate(id =  1:237) |>
  inner_join(attitudes)

ggplot(u, aes(x = attitude_hat_ml, y = u2)) +
  geom_point() +
  xlab("Predicted attitudes") +
  ylab("Intercept") + 
  geom_hline(yintercept = 0, color = "red")


ggplot(u, aes(x = attitude_hat_ml, y = u1_time)) +
  geom_point() +
  xlab("Predicted attitudes") +
  ylab("Slope time") + 
  geom_hline(yintercept = 0, color = "red")

ggplot(u, aes(x = attitude_hat_ml, y = u1_exposure)) +
  geom_point() +
  xlab("Predicted attitudes") +
  ylab("Slope exposure") + 
  geom_hline(yintercept = 0, color = "red")

```

Compared to model 7, model 10 does not improve the normality of the residual errors. In this case, my final model would be m7. Although inspecting the errors show that there are some patterns in the data that look structural, the additional effects hardly improved the model and in one case even resulted in convergence issues.

Check if results are similar with REML

```{r REML}
m12 <- lmer(attitude ~ time_r 
            + exposure_c 
            + I(exposure_c^2) 
            + income_c 
            + female 
            + minority 
            + I(female*time_r) 
            + (1 + time_r | id), 
            data = attitudes, 
            REML = T)
summary(m7)
summary(m12)
```

The results of ML and REML are comparable

A regular longitudinal multilevel model assumes compound symmetry, which means that residual variance on the time level will only have one variance and covariance 0. With time points, however, it is plausible that this assumption does not hold. For example, time points closer together might correlate more than time points further away because of memory effects. This is called autocorrelation. A Toeplitz matrix covariance structure is a special case of a simplex covariance structure. Instead of compound symmetry or a completely unstructured covariance structure, the Toeplitz assumes that each time lag has its own autocorrelation so that timepoints closer together have a higher covariance than time points further away.

lme4 does not have a lot of options for complex covariance structures and so if you really want to add more complex covariance structures you would have to use the [***nlme package***]{.underline}. If you are solely interested in the fixed effects, you wouldn't really need to use a complex covariance structure as fixed effects are rarely affected by it. Says Hox.
